/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 26 07:47:36 GMT 2021
 */

package com.gildedrose;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.gildedrose.Item;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Item_ESTest extends Item_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Item item0 = new Item("_?", 0, 0);
      item0.setSellIn(976);
      item0.toString();
      assertEquals(976, item0.sellIn);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Item item0 = new Item("_?", 0, 0);
      int int0 = item0.getSellIn();
      assertEquals(0, int0);
      assertEquals(0, item0.quality);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Item item0 = new Item("_?", 0, 0);
      item0.sellIn = (-1617);
      int int0 = item0.getSellIn();
      assertEquals((-1617), int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Item item0 = new Item("5Kz?z}'eMT6mVtq", (-1), (-1));
      int int0 = item0.getQuality();
      assertEquals(0, int0);
      assertEquals((-1), item0.sellIn);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Item item0 = new Item("m=c]5;-Ts*S1_F{ ", (-1220), 0);
      assertEquals(0, item0.quality);
      
      item0.quality = (-1220);
      int int0 = item0.getQuality();
      assertEquals((-1220), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Item item0 = new Item((String) null, (-709), (-402));
      item0.getName();
      assertEquals((-709), item0.sellIn);
      assertEquals(0, item0.quality);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Item item0 = new Item("_?", 0, 0);
      item0.setName("");
      item0.getName();
      assertEquals("", item0.getName());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Item item0 = new Item("", 0, 0);
      item0.setQuality(0);
      assertEquals(0, item0.quality);
      assertEquals(0, item0.sellIn);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Item item0 = new Item("&]|RMXFgQb", 1617, 1617);
      try { 
        item0.setQuality((-1125));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // La cantidad no puede ser negativa.
         //
         verifyException("com.gildedrose.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Item item0 = new Item("&]|RMXFgQb", 1617, 1617);
      int int0 = item0.getQuality();
      assertEquals(1617, item0.sellIn);
      assertEquals(1617, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Item item0 = new Item("&]|RMXFgQb", 1617, 1617);
      int int0 = item0.getSellIn();
      assertEquals(1617, item0.quality);
      assertEquals(1617, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Item item0 = new Item("&]|RMXFgQb", 1617, 1617);
      String string0 = item0.getName();
      assertEquals(1617, item0.quality);
      assertNotNull(string0);
      assertEquals(1617, item0.sellIn);
  }
}
